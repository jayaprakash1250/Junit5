package com.junit;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

class CalucatorTest {
	@BeforeAll
	public static void first()
	{
	    System.out.println("Started Test");
	    
	}
	
    @BeforeEach
	public void beforeTest()
	{
	    System.out.println("Before Test");
	    
	}

	@Test
	void test() {
		System.out.println("from test() Demo");
	}
	
	@Test
	public void addTest()
	{
		Calucator c1 = new Calucator();
		int actual = c1.add(20, 30);
		int expected = 50;
		assertEquals(expected, actual, ()-> "Got Worng result :"+actual+"Expected is: "+expected);
		System.out.println("from addTest() Demo");
	}
	
	@Test
	public void subTest()
	{
		assertEquals(30, new Calucator().sub(50, 20));
		System.out.println("from subtest() Demo");
	}
	
	@Test
	public void multest()
	{
		assertEquals(1000, new Calucator().mul(50, 20));
		System.out.println("from multest() Demo");
	}
	
	@Test
	public void divTest()
	{
		assertEquals(2, new Calucator().div(50, 20));
		assertThrows(ArithmeticException.class, () ->new Calucator().div(0, 0));
		assertThrows(NumberFormatException.class, () ->new Calucator().div(4, -1));
		System.out.println("from testdiv() Demo");
	}
	
	@AfterEach
	public void afterTest()
	{
	    System.out.println("After Test");
	    
	}
	@AfterAll
	public void static last()
	{
	    System.out.println("Last Test");
	    
	}


}
